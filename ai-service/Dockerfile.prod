# ===========================================
# AgroVision Pro - AI Service Dockerfile
# ===========================================

# Use Python 3.11 slim image for smaller size
FROM python:3.11-slim AS base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    ffmpeg \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libglib2.0-0 \
    libgtk-3-0 \
    && rm -rf /var/lib/apt/lists/*

# ===========================================
# DEVELOPMENT STAGE
# ===========================================
FROM base AS development

# Install development dependencies
RUN pip install --upgrade pip setuptools wheel

# Copy requirements
COPY requirements.txt requirements-dev.txt* ./

# Install Python dependencies
RUN pip install -r requirements.txt
RUN if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p uploads models logs

# Expose port
EXPOSE 8000

# Development command with hot reload
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# ===========================================
# PRODUCTION STAGE
# ===========================================
FROM base AS production

# Install production dependencies only
RUN pip install --upgrade pip setuptools wheel

# Copy requirements
COPY requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Create non-root user
RUN useradd --create-home --shell /bin/bash --user-group python

# Copy application code
COPY --chown=python:python . .

# Create necessary directories with proper permissions
RUN mkdir -p uploads models logs && \
    chown -R python:python uploads models logs

# Switch to non-root user
USER python

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Production command
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"] 